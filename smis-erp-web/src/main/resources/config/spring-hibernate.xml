<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd 
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
	http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">
 
	<!-- 激活annotation功能 -->
	<context:annotation-config />
	<!-- 激活annotation功能 -->
	<context:spring-configured />
	
	<context:component-scan base-package="com.smis.*">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<cache:annotation-driven />
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager"
		p:cacheManager-ref="ehcache" />
	<bean id="ehcache"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
		p:configLocation="classpath:config/ehcache.xml" />

	<context:property-placeholder
		location="classpath:config/jdbc.properties" />

	<!-- 配置数据源C3P0 -->
	<bean id="mysqldataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.mysql.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.mysql.url}" />
		<property name="user" value="${jdbc.mysql.username}" />
		<property name="password" value="${jdbc.mysql.password}" />
		<!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="10" />
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="80" />
		<!--连接池中保留的最小连接数。 -->
		<property name="minPoolSize" value="5" />
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="60" />
		<property name="maxStatements" value="6000" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="10" />
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="60" />
		
	</bean>

    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <!-- 国际化信息所在的文件名 -->                     
        <property name="basename" value="messages" />   
        <!-- 如果在国际化资源文件中找不到对应代码的信息，就用这个代码作为名称  -->               
        <property name="useCodeAsDefaultMessage" value="true" />           
    </bean>

    <!-- <mvc:interceptors>  
        国际化操作拦截器 如果采用基于（请求/Session/Cookie）则必需配置 
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />  
    </mvc:interceptors>
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" /> -->

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="mysqldataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
				<prop key="current_session_context_class">thread</prop>
			</props>
		</property>
		<!-- 注解方式配置 -->
		<property name="packagesToScan">
			<list>
				<value>com.smis.model.entity</value>
			</list>
		</property>
	</bean>
	

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="mysqldataSource" />
	</bean>


	<!-- 配置事物管理器，在*ServiceImpl里写@Transactional就可以启用事物管理 -->
	<bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager"> 
		<property name="sessionFactory" ref="sessionFactory" />
	</bean> 
	<tx:advice id="txAdvice" transaction-manager="txManager"> 
		<tx:attributes> 
			<tx:method name="save*" propagation="REQUIRED"/> 
			<tx:method name="add*" propagation="REQUIRED"/> 
			<tx:method name="create*" propagation="REQUIRED"/> 
			<tx:method name="insert*" propagation="REQUIRED"/> 
			<tx:method name="*" read-only="true" /> 
		</tx:attributes> 
	</tx:advice> 
	
	<aop:config proxy-target-class="true"> 
	<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.smis..service..*.*(..))" /> 
	</aop:config>
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 定时任务配置 -->
	<task:executor id="executor" pool-size="5" />
	<task:scheduler id="scheduler" pool-size="10" />
	<task:annotation-driven executor="executor"
		scheduler="scheduler" /> 
		
	
</beans>